{"ast":null,"code":"var _jsxFileName = \"D:\\\\react-projects\\\\weather-app\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport \"./styles.css\";\nimport axios from \"axios\";\nimport CurrentWeather from \"./components/CurrentWeather\";\nimport DailyForecast from \"./components/DailyForecast\";\nimport HourlyForecast from \"./components/HourlyForecast\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [city, setCity] = useState(\"Karachi\");\n  const [weatherData, setWeatherData] = useState(null);\n\n  const handleCityChange = newCity => {\n    setCity(newCity);\n  };\n\n  useEffect(() => {\n    const fetchWeatherData = async () => {\n      try {\n        const response = await axios.get(`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=7f88633674eabfb7bb8da25149fa9582&units=metric`);\n        setWeatherData(response.data);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    fetchWeatherData();\n  }, [city]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onChange: e => handleCityChange(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), weatherData && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(CurrentWeather, {\n        data: weatherData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(DailyForecast, {\n        data: weatherData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(HourlyForecast, {\n        data: weatherData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"m0iBeRIzv4PHp/iEsCPJa5TJOvc=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","CurrentWeather","DailyForecast","HourlyForecast","App","city","setCity","weatherData","setWeatherData","handleCityChange","newCity","fetchWeatherData","response","get","data","error","console","e","target","value"],"sources":["D:/react-projects/weather-app/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./styles.css\";\r\nimport axios from \"axios\";\r\nimport CurrentWeather from \"./components/CurrentWeather\";\r\nimport DailyForecast from \"./components/DailyForecast\";\r\nimport HourlyForecast from \"./components/HourlyForecast\";\r\n\r\nfunction App() {\r\n  const [city, setCity] = useState(\"Karachi\");\r\n  const [weatherData, setWeatherData] = useState(null);\r\n\r\n  const handleCityChange = (newCity) => {\r\n    setCity(newCity);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchWeatherData = async () => {\r\n      try {\r\n        const response = await axios.get(\r\n          `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=7f88633674eabfb7bb8da25149fa9582&units=metric`\r\n        );\r\n        setWeatherData(response.data);\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    };\r\n\r\n    fetchWeatherData();\r\n  }, [city]);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <input type=\"text\" onChange={(e) => handleCityChange(e.target.value)} />\r\n\r\n      {weatherData && (\r\n        <>\r\n          <CurrentWeather data={weatherData} />\r\n          <DailyForecast data={weatherData} />\r\n          <HourlyForecast data={weatherData} />\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,cAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,6BAA3B;AACA,OAAOC,aAAP,MAA0B,4BAA1B;AACA,OAAOC,cAAP,MAA2B,6BAA3B;;;;AAEA,SAASC,GAAT,GAAe;EAAA;;EACb,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,SAAD,CAAhC;EACA,MAAM,CAACS,WAAD,EAAcC,cAAd,IAAgCV,QAAQ,CAAC,IAAD,CAA9C;;EAEA,MAAMW,gBAAgB,GAAIC,OAAD,IAAa;IACpCJ,OAAO,CAACI,OAAD,CAAP;EACD,CAFD;;EAIAX,SAAS,CAAC,MAAM;IACd,MAAMY,gBAAgB,GAAG,YAAY;MACnC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMZ,KAAK,CAACa,GAAN,CACpB,qDAAoDR,IAAK,sDADrC,CAAvB;QAGAG,cAAc,CAACI,QAAQ,CAACE,IAAV,CAAd;MACD,CALD,CAKE,OAAOC,KAAP,EAAc;QACdC,OAAO,CAACD,KAAR,CAAcA,KAAd;MACD;IACF,CATD;;IAWAJ,gBAAgB;EACjB,CAbQ,EAaN,CAACN,IAAD,CAbM,CAAT;EAeA,oBACE;IAAK,SAAS,EAAC,KAAf;IAAA,wBACE;MAAO,IAAI,EAAC,MAAZ;MAAmB,QAAQ,EAAGY,CAAD,IAAOR,gBAAgB,CAACQ,CAAC,CAACC,MAAF,CAASC,KAAV;IAApD;MAAA;MAAA;MAAA;IAAA,QADF,EAGGZ,WAAW,iBACV;MAAA,wBACE,QAAC,cAAD;QAAgB,IAAI,EAAEA;MAAtB;QAAA;QAAA;QAAA;MAAA,QADF,eAEE,QAAC,aAAD;QAAe,IAAI,EAAEA;MAArB;QAAA;QAAA;QAAA;MAAA,QAFF,eAGE,QAAC,cAAD;QAAgB,IAAI,EAAEA;MAAtB;QAAA;QAAA;QAAA;MAAA,QAHF;IAAA,gBAJJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAaD;;GApCQH,G;;KAAAA,G;AAsCT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}