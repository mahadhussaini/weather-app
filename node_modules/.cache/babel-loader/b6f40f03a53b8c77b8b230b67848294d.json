{"ast":null,"code":"'use client';\n\nimport PropTypes from 'prop-types';\nimport { createContainer } from '@mui/system';\nimport capitalize from '../utils/capitalize';\nimport styled from '../styles/styled';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nconst Container = createContainer({\n  createStyledComponent: styled('div', {\n    name: 'MuiContainer',\n    slot: 'Root',\n    overridesResolver: (props, styles) => {\n      const {\n        ownerState\n      } = props;\n      return [styles.root, styles[`maxWidth${capitalize(String(ownerState.maxWidth))}`], ownerState.fixed && styles.fixed, ownerState.disableGutters && styles.disableGutters];\n    }\n  }),\n  useThemeProps: inProps => useDefaultProps({\n    props: inProps,\n    name: 'MuiContainer'\n  })\n});\nprocess.env.NODE_ENV !== \"production\" ? Container.propTypes\n/* remove-proptypes */\n= {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the left and right padding is removed.\n   * @default false\n   */\n  disableGutters: PropTypes.bool,\n\n  /**\n   * Set the max-width to match the min-width of the current breakpoint.\n   * This is useful if you'd prefer to design for a fixed set of sizes\n   * instead of trying to accommodate a fully fluid viewport.\n   * It's fluid by default.\n   * @default false\n   */\n  fixed: PropTypes.bool,\n\n  /**\n   * Determine the max-width of the container.\n   * The container width grows with the size of the screen.\n   * Set to `false` to disable `maxWidth`.\n   * @default 'lg'\n   */\n  maxWidth: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl', false]), PropTypes.string]),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Container;","map":{"version":3,"names":["PropTypes","createContainer","capitalize","styled","useDefaultProps","Container","createStyledComponent","name","slot","overridesResolver","props","styles","ownerState","root","String","maxWidth","fixed","disableGutters","useThemeProps","inProps","process","env","NODE_ENV","propTypes","children","node","classes","object","component","elementType","bool","oneOfType","oneOf","string","sx","arrayOf","func"],"sources":["D:/react-projects/weather-app/node_modules/@mui/material/Container/Container.js"],"sourcesContent":["'use client';\n\nimport PropTypes from 'prop-types';\nimport { createContainer } from '@mui/system';\nimport capitalize from '../utils/capitalize';\nimport styled from '../styles/styled';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nconst Container = createContainer({\n  createStyledComponent: styled('div', {\n    name: 'MuiContainer',\n    slot: 'Root',\n    overridesResolver: (props, styles) => {\n      const {\n        ownerState\n      } = props;\n      return [styles.root, styles[`maxWidth${capitalize(String(ownerState.maxWidth))}`], ownerState.fixed && styles.fixed, ownerState.disableGutters && styles.disableGutters];\n    }\n  }),\n  useThemeProps: inProps => useDefaultProps({\n    props: inProps,\n    name: 'MuiContainer'\n  })\n});\nprocess.env.NODE_ENV !== \"production\" ? Container.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, the left and right padding is removed.\n   * @default false\n   */\n  disableGutters: PropTypes.bool,\n  /**\n   * Set the max-width to match the min-width of the current breakpoint.\n   * This is useful if you'd prefer to design for a fixed set of sizes\n   * instead of trying to accommodate a fully fluid viewport.\n   * It's fluid by default.\n   * @default false\n   */\n  fixed: PropTypes.bool,\n  /**\n   * Determine the max-width of the container.\n   * The container width grows with the size of the screen.\n   * Set to `false` to disable `maxWidth`.\n   * @default 'lg'\n   */\n  maxWidth: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl', false]), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Container;"],"mappings":"AAAA;;AAEA,OAAOA,SAAP,MAAsB,YAAtB;AACA,SAASC,eAAT,QAAgC,aAAhC;AACA,OAAOC,UAAP,MAAuB,qBAAvB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,SAASC,eAAT,QAAgC,yBAAhC;AACA,MAAMC,SAAS,GAAGJ,eAAe,CAAC;EAChCK,qBAAqB,EAAEH,MAAM,CAAC,KAAD,EAAQ;IACnCI,IAAI,EAAE,cAD6B;IAEnCC,IAAI,EAAE,MAF6B;IAGnCC,iBAAiB,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;MACpC,MAAM;QACJC;MADI,IAEFF,KAFJ;MAGA,OAAO,CAACC,MAAM,CAACE,IAAR,EAAcF,MAAM,CAAE,WAAUT,UAAU,CAACY,MAAM,CAACF,UAAU,CAACG,QAAZ,CAAP,CAA8B,EAApD,CAApB,EAA4EH,UAAU,CAACI,KAAX,IAAoBL,MAAM,CAACK,KAAvG,EAA8GJ,UAAU,CAACK,cAAX,IAA6BN,MAAM,CAACM,cAAlJ,CAAP;IACD;EARkC,CAAR,CADG;EAWhCC,aAAa,EAAEC,OAAO,IAAIf,eAAe,CAAC;IACxCM,KAAK,EAAES,OADiC;IAExCZ,IAAI,EAAE;EAFkC,CAAD;AAXT,CAAD,CAAjC;AAgBAa,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwCjB,SAAS,CAACkB;AAAU;AAApB,EAA6C;EACnF;EACA;EACA;EACA;;EACA;AACF;AACA;EACEC,QAAQ,EAAExB,SAAS,CAACyB,IAR+D;;EASnF;AACF;AACA;EACEC,OAAO,EAAE1B,SAAS,CAAC2B,MAZgE;;EAanF;AACF;AACA;AACA;EACEC,SAAS,EAAE5B,SAAS,CAAC6B,WAjB8D;;EAkBnF;AACF;AACA;AACA;EACEZ,cAAc,EAAEjB,SAAS,CAAC8B,IAtByD;;EAuBnF;AACF;AACA;AACA;AACA;AACA;AACA;EACEd,KAAK,EAAEhB,SAAS,CAAC8B,IA9BkE;;EA+BnF;AACF;AACA;AACA;AACA;AACA;EACEf,QAAQ,EAAEf;EAAU;EAAD,CAAuC+B,SAAhD,CAA0D,CAAC/B,SAAS,CAACgC,KAAV,CAAgB,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,EAAyB,IAAzB,EAA+B,KAA/B,CAAhB,CAAD,EAAyDhC,SAAS,CAACiC,MAAnE,CAA1D,CArCyE;;EAsCnF;AACF;AACA;EACEC,EAAE,EAAElC,SAAS,CAAC+B,SAAV,CAAoB,CAAC/B,SAAS,CAACmC,OAAV,CAAkBnC,SAAS,CAAC+B,SAAV,CAAoB,CAAC/B,SAAS,CAACoC,IAAX,EAAiBpC,SAAS,CAAC2B,MAA3B,EAAmC3B,SAAS,CAAC8B,IAA7C,CAApB,CAAlB,CAAD,EAA6F9B,SAAS,CAACoC,IAAvG,EAA6GpC,SAAS,CAAC2B,MAAvH,CAApB;AAzC+E,CAArF,GA0CI,KAAK,CA1CT;AA2CA,eAAetB,SAAf"},"metadata":{},"sourceType":"module"}