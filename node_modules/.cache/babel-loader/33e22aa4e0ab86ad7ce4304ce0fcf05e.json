{"ast":null,"code":"'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { ThemeProvider as MuiThemeProvider, useTheme as usePrivateTheme } from '@mui/private-theming';\nimport exactProp from '@mui/utils/exactProp';\nimport { ThemeContext as StyledEngineThemeContext } from '@mui/styled-engine';\nimport useThemeWithoutDefault from '../useThemeWithoutDefault';\nimport RtlProvider from '../RtlProvider';\nimport DefaultPropsProvider from '../DefaultPropsProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst EMPTY_THEME = {};\n\nfunction useThemeScoping(themeId, upperTheme, localTheme) {\n  let isPrivate = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n  return React.useMemo(() => {\n    const resolvedTheme = themeId ? upperTheme[themeId] || upperTheme : upperTheme;\n\n    if (typeof localTheme === 'function') {\n      const mergedTheme = localTheme(resolvedTheme);\n      const result = themeId ? _extends({}, upperTheme, {\n        [themeId]: mergedTheme\n      }) : mergedTheme; // must return a function for the private theme to NOT merge with the upper theme.\n      // see the test case \"use provided theme from a callback\" in ThemeProvider.test.js\n\n      if (isPrivate) {\n        return () => result;\n      }\n\n      return result;\n    }\n\n    return themeId ? _extends({}, upperTheme, {\n      [themeId]: localTheme\n    }) : _extends({}, upperTheme, localTheme);\n  }, [themeId, upperTheme, localTheme, isPrivate]);\n}\n/**\n * This component makes the `theme` available down the React tree.\n * It should preferably be used at **the root of your component tree**.\n *\n * <ThemeProvider theme={theme}> // existing use case\n * <ThemeProvider theme={{ id: theme }}> // theme scoping\n */\n\n\nfunction ThemeProvider(props) {\n  const {\n    children,\n    theme: localTheme,\n    themeId\n  } = props;\n  const upperTheme = useThemeWithoutDefault(EMPTY_THEME);\n  const upperPrivateTheme = usePrivateTheme() || EMPTY_THEME;\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (upperTheme === null && typeof localTheme === 'function' || themeId && upperTheme && !upperTheme[themeId] && typeof localTheme === 'function') {\n      console.error(['MUI: You are providing a theme function prop to the ThemeProvider component:', '<ThemeProvider theme={outerTheme => outerTheme} />', '', 'However, no outer theme is present.', 'Make sure a theme is already injected higher in the React tree ' + 'or provide a theme object.'].join('\\n'));\n    }\n  }\n\n  const engineTheme = useThemeScoping(themeId, upperTheme, localTheme);\n  const privateTheme = useThemeScoping(themeId, upperPrivateTheme, localTheme, true);\n  const rtlValue = engineTheme.direction === 'rtl';\n  return /*#__PURE__*/_jsx(MuiThemeProvider, {\n    theme: privateTheme,\n    children: /*#__PURE__*/_jsx(StyledEngineThemeContext.Provider, {\n      value: engineTheme,\n      children: /*#__PURE__*/_jsx(RtlProvider, {\n        value: rtlValue,\n        children: /*#__PURE__*/_jsx(DefaultPropsProvider, {\n          value: engineTheme == null ? void 0 : engineTheme.components,\n          children: children\n        })\n      })\n    })\n  });\n}\n\nprocess.env.NODE_ENV !== \"production\" ? ThemeProvider.propTypes\n/* remove-proptypes */\n= {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n\n  /**\n   * Your component tree.\n   */\n  children: PropTypes.node,\n\n  /**\n   * A theme object. You can provide a function to extend the outer theme.\n   */\n  theme: PropTypes.oneOfType([PropTypes.func, PropTypes.object]).isRequired,\n\n  /**\n   * The design system's unique id for getting the corresponded theme when there are multiple design systems.\n   */\n  themeId: PropTypes.string\n} : void 0;\n\nif (process.env.NODE_ENV !== 'production') {\n  process.env.NODE_ENV !== \"production\" ? ThemeProvider.propTypes = exactProp(ThemeProvider.propTypes) : void 0;\n}\n\nexport default ThemeProvider;","map":{"version":3,"names":["_extends","React","PropTypes","ThemeProvider","MuiThemeProvider","useTheme","usePrivateTheme","exactProp","ThemeContext","StyledEngineThemeContext","useThemeWithoutDefault","RtlProvider","DefaultPropsProvider","jsx","_jsx","EMPTY_THEME","useThemeScoping","themeId","upperTheme","localTheme","isPrivate","useMemo","resolvedTheme","mergedTheme","result","props","children","theme","upperPrivateTheme","process","env","NODE_ENV","console","error","join","engineTheme","privateTheme","rtlValue","direction","Provider","value","components","propTypes","node","oneOfType","func","object","isRequired","string"],"sources":["D:/react-projects/weather-app/node_modules/@mui/system/esm/ThemeProvider/ThemeProvider.js"],"sourcesContent":["'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { ThemeProvider as MuiThemeProvider, useTheme as usePrivateTheme } from '@mui/private-theming';\nimport exactProp from '@mui/utils/exactProp';\nimport { ThemeContext as StyledEngineThemeContext } from '@mui/styled-engine';\nimport useThemeWithoutDefault from '../useThemeWithoutDefault';\nimport RtlProvider from '../RtlProvider';\nimport DefaultPropsProvider from '../DefaultPropsProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst EMPTY_THEME = {};\nfunction useThemeScoping(themeId, upperTheme, localTheme, isPrivate = false) {\n  return React.useMemo(() => {\n    const resolvedTheme = themeId ? upperTheme[themeId] || upperTheme : upperTheme;\n    if (typeof localTheme === 'function') {\n      const mergedTheme = localTheme(resolvedTheme);\n      const result = themeId ? _extends({}, upperTheme, {\n        [themeId]: mergedTheme\n      }) : mergedTheme;\n      // must return a function for the private theme to NOT merge with the upper theme.\n      // see the test case \"use provided theme from a callback\" in ThemeProvider.test.js\n      if (isPrivate) {\n        return () => result;\n      }\n      return result;\n    }\n    return themeId ? _extends({}, upperTheme, {\n      [themeId]: localTheme\n    }) : _extends({}, upperTheme, localTheme);\n  }, [themeId, upperTheme, localTheme, isPrivate]);\n}\n\n/**\n * This component makes the `theme` available down the React tree.\n * It should preferably be used at **the root of your component tree**.\n *\n * <ThemeProvider theme={theme}> // existing use case\n * <ThemeProvider theme={{ id: theme }}> // theme scoping\n */\nfunction ThemeProvider(props) {\n  const {\n    children,\n    theme: localTheme,\n    themeId\n  } = props;\n  const upperTheme = useThemeWithoutDefault(EMPTY_THEME);\n  const upperPrivateTheme = usePrivateTheme() || EMPTY_THEME;\n  if (process.env.NODE_ENV !== 'production') {\n    if (upperTheme === null && typeof localTheme === 'function' || themeId && upperTheme && !upperTheme[themeId] && typeof localTheme === 'function') {\n      console.error(['MUI: You are providing a theme function prop to the ThemeProvider component:', '<ThemeProvider theme={outerTheme => outerTheme} />', '', 'However, no outer theme is present.', 'Make sure a theme is already injected higher in the React tree ' + 'or provide a theme object.'].join('\\n'));\n    }\n  }\n  const engineTheme = useThemeScoping(themeId, upperTheme, localTheme);\n  const privateTheme = useThemeScoping(themeId, upperPrivateTheme, localTheme, true);\n  const rtlValue = engineTheme.direction === 'rtl';\n  return /*#__PURE__*/_jsx(MuiThemeProvider, {\n    theme: privateTheme,\n    children: /*#__PURE__*/_jsx(StyledEngineThemeContext.Provider, {\n      value: engineTheme,\n      children: /*#__PURE__*/_jsx(RtlProvider, {\n        value: rtlValue,\n        children: /*#__PURE__*/_jsx(DefaultPropsProvider, {\n          value: engineTheme == null ? void 0 : engineTheme.components,\n          children: children\n        })\n      })\n    })\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? ThemeProvider.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * Your component tree.\n   */\n  children: PropTypes.node,\n  /**\n   * A theme object. You can provide a function to extend the outer theme.\n   */\n  theme: PropTypes.oneOfType([PropTypes.func, PropTypes.object]).isRequired,\n  /**\n   * The design system's unique id for getting the corresponded theme when there are multiple design systems.\n   */\n  themeId: PropTypes.string\n} : void 0;\nif (process.env.NODE_ENV !== 'production') {\n  process.env.NODE_ENV !== \"production\" ? ThemeProvider.propTypes = exactProp(ThemeProvider.propTypes) : void 0;\n}\nexport default ThemeProvider;"],"mappings":"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"},"metadata":{},"sourceType":"module"}